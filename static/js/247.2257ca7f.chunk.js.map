{"version":3,"file":"static/js/247.2257ca7f.chunk.js","mappings":"+SAEMA,EAAM,mCAGNC,EAAYC,EAAAA,EAAAA,OAAa,CAC7BC,QAAS,kCAGEC,EAAwB,mCAAG,sGACfH,EAAUI,IAAV,uBAPL,MAOK,oBACkBL,IAFH,uBAC9BM,EAD8B,EAC9BA,KAD8B,kBAI/BA,GAJ+B,2CAAH,qDAOxBC,EAAsB,mCAAG,WAAMC,GAAN,yFACbP,EAAUI,IAAV,gBAAuBG,EAAvB,oBAA0CR,IAD7B,uBAC5BM,EAD4B,EAC5BA,KAD4B,kBAE7BA,GAF6B,2CAAH,sDAKtBG,EAAmB,mCAAG,WAAMD,GAAN,yFACVP,EAAUI,IAAV,gBACZG,EADY,4BACeR,IAFL,uBACzBM,EADyB,EACzBA,KADyB,kBAI1BA,GAJ0B,2CAAH,sDAOnBI,EAAgB,mCAAG,WAAMF,GAAN,yFACPP,EAAUI,IAAV,gBACZG,EADY,4BACeR,IAFR,uBACtBM,EADsB,EACtBA,KADsB,kBAIvBA,GAJuB,2CAAH,sDAYhBK,EAAmB,mCAAG,WAAMC,GAAN,yFACVX,EAAUI,IAAV,+BACGL,EADH,kBACgBY,IAFN,uBACzBN,EADyB,EACzBA,KADyB,kBAI1BA,GAJ0B,2CAAH,qD,kHCuBhC,UA1Da,WACX,OAAwCO,EAAAA,EAAAA,UAAS,CAAC,GAAlD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KACQX,GAAYY,EAAAA,EAAAA,MAAZZ,SAERa,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,mCAAG,oGAEtBL,GAAa,GAFS,UAGIP,EAAAA,EAAAA,IAAiBF,GAHrB,OAGhBe,EAHgB,OAItBR,EAAgBQ,EAAYC,MAJN,gDAMtBL,EAAS,KAAMM,SANO,yBAQtBR,GAAa,GARS,4EAAH,qDAWvBK,GACD,GAAE,CAACd,IAIJ,OADAkB,QAAQC,IAAIb,IAEV,2BACGI,IACC,0BACE,yBAAG,sCAAoCA,OAG1CF,GACC,0BACE,SAAC,IAAD,OAGF,0BACE,wBACGY,MAAMC,QAAQf,IACbA,EAAagB,KAAI,SAAAN,GACf,OACE,2BACE,gBAAKO,IArBX,kCAqByBP,EAAKQ,aAAcC,IAAKT,EAAKU,QAChD,yBAAG,WACM,0BAAOV,EAAKU,WAErB,yBAAG,gBACW,0BAAOV,EAAKW,iBANnBX,EAAKY,GAUjB,UAMd,C","sources":["Services/ServicesApi.jsx","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = '149c378c60b6910f81bab715963f1e90';\nconst time_window = 'day';\n\nconst $instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n});\n\nexport const requestTopRatedMovieList = async () => {\n  const { data } = await $instance.get(\n    `trending/all/${time_window}?api_key=${KEY}`\n  );\n  return data;\n};\n\nexport const requestMovieReviewById = async movieId => {\n  const { data } = await $instance.get(`movie/${movieId}?api_key=${KEY}`);\n  return data;\n};\n\nexport const requestMovieReviews = async movieId => {\n  const { data } = await $instance.get(\n    `movie/${movieId}/reviews?api_key=${KEY}`\n  );\n  return data;\n};\n\nexport const requestMovieCast = async movieId => {\n  const { data } = await $instance.get(\n    `movie/${movieId}/credits?api_key=${KEY}`\n  );\n  return data;\n};\n\nexport const requestMoviePoster = async posterPath => {\n  const { data } = await $instance.get(`movie/${posterPath}?api_key=${KEY}`);\n  return data;\n};\n\nexport const requestMoviesSearch = async query => {\n  const { data } = await $instance.get(\n    `search/movie?api_key=${KEY}&query=${query}`\n  );\n  return data;\n};\n","import { requestMovieCast } from 'Services/ServicesApi';\nimport Loader from 'components/Loader/Loader';\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst Cast = () => {\n  const [movieCredits, setMovieCredits] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchMovieCredits = async () => {\n      try {\n        setIsLoading(true);\n        const movieCredit = await requestMovieCast(movieId);\n        setMovieCredits(movieCredit.cast);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchMovieCredits();\n  }, [movieId]);\n  const poster = `https://image.tmdb.org/t/p/w200`;\n\n  console.log(movieCredits);\n  return (\n    <div>\n      {error && (\n        <div>\n          <p>Opps, some error occured... Error: {error}</p>\n        </div>\n      )}\n      {isLoading ? (\n        <div>\n          <Loader />\n        </div>\n      ) : (\n        <div>\n          <ul>\n            {Array.isArray(movieCredits) &&\n              movieCredits.map(cast => {\n                return (\n                  <li key={cast.id}>\n                    <img src={poster + cast.profile_path} alt={cast.name} />\n                    <p>\n                      Name : <span>{cast.name}</span>\n                    </p>\n                    <p>\n                      Character : <span>{cast.character}</span>\n                    </p>\n                  </li>\n                );\n              })}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Cast;\n"],"names":["KEY","$instance","axios","baseURL","requestTopRatedMovieList","get","data","requestMovieReviewById","movieId","requestMovieReviews","requestMovieCast","requestMoviesSearch","query","useState","movieCredits","setMovieCredits","isLoading","setIsLoading","error","setError","useParams","useEffect","fetchMovieCredits","movieCredit","cast","message","console","log","Array","isArray","map","src","profile_path","alt","name","character","id"],"sourceRoot":""}