{"version":3,"file":"static/js/304.633abbae.chunk.js","mappings":"+SAEMA,EAAM,mCAGNC,EAAYC,EAAAA,EAAAA,OAAa,CAC7BC,QAAS,kCAGEC,EAAwB,mCAAG,sGACfH,EAAUI,IAAV,uBAPL,MAOK,oBACkBL,IAFH,uBAC9BM,EAD8B,EAC9BA,KAD8B,kBAI/BA,GAJ+B,2CAAH,qDAOxBC,EAAsB,mCAAG,WAAMC,GAAN,yFACbP,EAAUI,IAAV,gBAAuBG,EAAvB,oBAA0CR,IAD7B,uBAC5BM,EAD4B,EAC5BA,KAD4B,kBAE7BA,GAF6B,2CAAH,sDAKtBG,EAAmB,mCAAG,WAAMD,GAAN,yFACVP,EAAUI,IAAV,gBACZG,EADY,4BACeR,IAFL,uBACzBM,EADyB,EACzBA,KADyB,kBAI1BA,GAJ0B,2CAAH,sDAOnBI,EAAgB,mCAAG,WAAMF,GAAN,yFACPP,EAAUI,IAAV,gBACZG,EADY,4BACeR,IAFR,uBACtBM,EADsB,EACtBA,KADsB,kBAIvBA,GAJuB,2CAAH,sDAYhBK,EAAmB,mCAAG,WAAMC,GAAN,yFACVX,EAAUI,IAAV,+BACGL,EADH,kBACgBY,IAFN,uBACzBN,EADyB,EACzBA,KADyB,kBAI1BA,GAJ0B,2CAAH,qD,wGCrCnBO,EAAcC,EAAAA,GAAAA,GAAH,ygBAmBXC,GAAgBD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,oN,SCY1B,EA7Bc,SAAC,GAAgB,IAAdG,EAAa,EAAbA,OAETC,GAAWC,EAAAA,EAAAA,MAEjB,OAAOF,EAAOG,KAAI,SAAAC,GAChB,OACE,SAACR,EAAD,WACE,UAACE,EAAD,CAAeO,MAAO,CAAEC,KAAML,GAAYM,GAAE,kBAAaH,EAAMI,IAA/D,WACE,gBACEC,IARE,kCAQYL,EAAMM,YACpBC,IAAKP,EAAMQ,MAAQR,EAAMQ,MAAQR,EAAMS,QAEzC,uBAAIT,EAAMQ,MAAQR,EAAMQ,MAAQR,EAAMS,WANxBT,EAAMI,GAU3B,GACF,C,0JCpBYM,E,OAAajB,GAAAA,IAAH,+Y,SC4CvB,EAxCa,WACX,OAA4CkB,EAAAA,EAAAA,UAAS,IAArD,eAAOC,EAAP,KAAuBC,EAAvB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAmB,mCAAG,oGAExBJ,GAAa,GAFW,UAGShC,EAAAA,EAAAA,MAHT,OAGlBqC,EAHkB,OAIxBP,EAAkBO,EAAmBC,SAJb,gDAMxBJ,EAAS,KAAMK,SANS,yBAQxBP,GAAa,GARW,4EAAH,qDAWzBI,GACD,GAAE,KAED,UAACT,EAAD,YACE,wBAAI,mBACHM,IACC,0BACE,yBAAG,sCAAoCA,OAG1CF,GACC,0BACE,SAACS,EAAA,EAAD,OAGF,yBACE,SAACC,EAAA,EAAD,CAAO5B,OAAQgB,QAKxB,C","sources":["Services/ServicesApi.jsx","components/Movie/Movie.styled.js","components/Movie/Movie.jsx","pages/Home/Home.styled.js","pages/Home/Home.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = '149c378c60b6910f81bab715963f1e90';\nconst time_window = 'day';\n\nconst $instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n});\n\nexport const requestTopRatedMovieList = async () => {\n  const { data } = await $instance.get(\n    `trending/all/${time_window}?api_key=${KEY}`\n  );\n  return data;\n};\n\nexport const requestMovieReviewById = async movieId => {\n  const { data } = await $instance.get(`movie/${movieId}?api_key=${KEY}`);\n  return data;\n};\n\nexport const requestMovieReviews = async movieId => {\n  const { data } = await $instance.get(\n    `movie/${movieId}/reviews?api_key=${KEY}`\n  );\n  return data;\n};\n\nexport const requestMovieCast = async movieId => {\n  const { data } = await $instance.get(\n    `movie/${movieId}/credits?api_key=${KEY}`\n  );\n  return data;\n};\n\nexport const requestMoviePoster = async posterPath => {\n  const { data } = await $instance.get(`movie/${posterPath}?api_key=${KEY}`);\n  return data;\n};\n\nexport const requestMoviesSearch = async query => {\n  const { data } = await $instance.get(\n    `search/movie?api_key=${KEY}&query=${query}`\n  );\n  return data;\n};\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const StyledMovie = styled.li`\n  display: flex;\n  flex-direction: column;\n  width: 360px;\n  margin: 20px;\n  border-radius: 15px;\n  overflow: hidden;\n  background-color: #afffff;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n  transition: all 0.3s ease-in-out;\n\n  &:hover {\n    transform: scale(1.03);\n    box-shadow: rgba(0, 0, 0, 0.25) 0px 14px 28px,\n      rgba(0, 0, 0, 0.22) 0px 10px 10px;\n    background-color: #ffffff;\n  }\n`;\nexport const StyledNavLink = styled(NavLink)`\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n  text-decoration: none;\n\n  & img {\n    width: 100%;\n  }\n\n  & p {\n    padding-left: 10px;\n    color: black;\n  }\n`;\n","import React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { StyledMovie, StyledNavLink } from './Movie.styled';\nimport PropTypes from 'prop-types';\n\nconst Movie = ({ movies }) => {\n  const poster = `https://image.tmdb.org/t/p/w400`;\n  const location = useLocation();\n  // console.log(movies);\n  return movies.map(movie => {\n    return (\n      <StyledMovie key={movie.id}>\n        <StyledNavLink state={{ from: location }} to={`/movies/${movie.id}`}>\n          <img\n            src={poster + movie.poster_path}\n            alt={movie.title ? movie.title : movie.name}\n          />\n          <p>{movie.title ? movie.title : movie.name}</p>\n        </StyledNavLink>\n      </StyledMovie>\n    );\n  });\n};\n\nMovie.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      poster_path: PropTypes.string.isRequired,\n      title: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n    })\n  ),\n};\nexport default Movie;\n","import styled from 'styled-components';\n\nexport const StyledHome = styled.div`\n  margin: 20px auto;\n  padding: 0 20px;\n\n  & ul {\n    display: grid;\n    max-width: calc(100vw - 48px);\n    grid-template-columns: repeat(auto-fill, minmax(360px, 1fr));\n    grid-gap: 16px;\n    margin-top: 0;\n    margin-bottom: 0;\n    padding: 0;\n    list-style: none;\n    margin-left: auto;\n    margin-right: auto;\n  }\n  & h1 {\n    padding-left: 24px;\n  }\n`;\n","import { requestTopRatedMovieList } from 'Services/ServicesApi';\nimport Loader from 'components/Loader/Loader';\nimport Movie from 'components/Movie/Movie';\nimport React, { useEffect, useState } from 'react';\nimport { StyledHome } from './Home.styled';\n\nconst Home = () => {\n  const [trendingMovies, setTrendingMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchTrendingMovies = async () => {\n      try {\n        setIsLoading(true);\n        const trendingMoviesList = await requestTopRatedMovieList();\n        setTrendingMovies(trendingMoviesList.results);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchTrendingMovies();\n  }, []);\n  return (\n    <StyledHome>\n      <h1>Trending today</h1>\n      {error && (\n        <div>\n          <p>Opps, some error occured... Error: {error}</p>\n        </div>\n      )}\n      {isLoading ? (\n        <div>\n          <Loader />\n        </div>\n      ) : (\n        <ul>\n          <Movie movies={trendingMovies}></Movie>\n        </ul>\n      )}\n    </StyledHome>\n  );\n};\n\nexport default Home;\n"],"names":["KEY","$instance","axios","baseURL","requestTopRatedMovieList","get","data","requestMovieReviewById","movieId","requestMovieReviews","requestMovieCast","requestMoviesSearch","query","StyledMovie","styled","StyledNavLink","NavLink","movies","location","useLocation","map","movie","state","from","to","id","src","poster_path","alt","title","name","StyledHome","useState","trendingMovies","setTrendingMovies","isLoading","setIsLoading","error","setError","useEffect","fetchTrendingMovies","trendingMoviesList","results","message","Loader","Movie"],"sourceRoot":""}